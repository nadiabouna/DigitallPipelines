# Clone a solution to the given output directory

parameters:
  # ----- Required parameters -----

  # The unique name of the solution
  - name: solutionUniqueName
    displayName: Solution unique name
    type: string

  # ----- Optional predefined parameters -----

  # Path to the repository folder to sync to
  - name: outputDirectory
    displayName: Path to folder where solutions should be cloned to
    type: string
    default: $(Build.Repository.LocalPath)/solutions

  # Option to overwrite the condition for this task
  - name: condition
    displayName: Overwrite condition for task
    type: string
    default: succeeded()

steps:
  # Clone solution
  - task: PowerShell@2
    displayName: Clone solution
    condition: ${{ parameters.condition }}
    inputs:
      targetType: inline
      workingDirectory: ${{ parameters.outputDirectory }}
      script: |
        $Debug = $env:Debug
        $SolutionUniqueName = $env:SolutionUniqueName
        $WorkingDirectory = $env:WorkingDirectory

        if ($Debug -eq $True) {
          Write-Host "##[debug]SolutionUniqueName=$SolutionUniqueName"
          Write-Host "##[debug]WorkingDirectory=$WorkingDirectory"
        }

        Write-Host "##[group]Cloning solution $SolutionUniqueName"
        pac solution clone --name $SolutionUniqueName --async --processCanvasApps
        Write-Host "##[endgroup]"
    env:
      Debug: $(System.Debug)
      SolutionUniqueName: ${{ parameters.solutionUniqueName }}
      WorkingDirectory: ${{ parameters.outputDirectory }}